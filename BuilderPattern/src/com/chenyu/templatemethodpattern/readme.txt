模板方法模式的定义：
定义一个操作中的算法骨架，而将算法的一些步骤延迟到子类中，使得子类可以不改变该算法结构的情况下重定义该算法的某些特定步骤。它是一种类行为型模式。

该模式的主要优点：
1. 封装了不变部分，扩展可变部分。把不变部分的算法封装到父类中，把可变部分算法由子类继承实现，便于子类扩展
2. 在父类中提取了公共的代码，便于代码复用。
3. 部分方法由子类实现，因此子类可以通过扩展的方式增加相应的功能，符合开闭原则。


主要角色：
1.抽象类/抽象模板：负责给出一个算法的轮廓和框架，它由一个模板方法和若干个基本方法构成。
    ① 模板方法：定义了算法的骨架，按某种顺序调用其包含的基本方法。
    ② 基本方法：是整个算法中的一个步骤，包含以下几种类型。
      * 抽象方法：在抽象类中声明，由具体子类实现。
      * 具体方法：在抽象类中已经实现，在具体子类中可以继承或重写它。
      * 钩子方法：在抽象类中已经实现，包括用于判断的逻辑方法和需要子类重写的空方法两种。

2.具体子类/具体实现：具体实现类，实现抽象类中所定义的抽象方法和钩子方法，它们是一个顶级逻辑的一个组成步骤。





